使用文档：

auto_handler/auto_handler.py 根据part3中总结的规则制作的代码模板。在descriptor中添加相应的异常描述，按照(自然语言描述, 音节提取缩略词, 首字母缩略词, trap.h中的枚举变量)的规则填入。使用前先用clean.sh清理生成去，执行auto_handler.py，会在该文件夹下按照文件名生成代码，手动复制到相应的文件中即可
user/ 包含了对异常的处理函数与触发函数，对于一个异常，先定义其用户处理函数，在umain中进行注册，然后构造可以触发该异常的情景。
kern/Makefrag 由于添加了自己的文件，所以需要在Makefrag中进行添加。将文件名添加在KERN_BINFILES中。需要注意的是，由于目前的JOS是将所有需要执行的程序加载到内核后部，所以当添加的文件太多会导致内核过大引起Triple Fault，所以我们删除了一些在lab4中需要的测试文件。
最后，通过make run-xxx执行该程序。
